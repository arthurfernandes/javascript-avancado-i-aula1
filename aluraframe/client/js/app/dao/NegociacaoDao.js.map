{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","onerror","console","log","e","target","error","cursor","openCursor","negociacoes","atual","result","n","value","push","Negociacao","_data","_quantidade","_valor","continue","clear"],"mappings":";;;;;;IAAMA,a;AACF,2BAAYC,UAAZ,EAAwB;AAAA;;AACpB,aAAKC,WAAL,GAAmBD,UAAnB;AACA,aAAKE,MAAL,GAAc,aAAd;AACH;;;;iCAEQC,U,EAAY;AAAA;;AACjB,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAIC,UAAU,MAAKN,WAAL,CACTO,WADS,CACG,CAAC,MAAKN,MAAN,CADH,EACkB,WADlB,EAETO,WAFS,CAEG,MAAKP,MAFR,EAGTQ,GAHS,CAGLP,UAHK,CAAd;;AAKAI,wBAAQI,SAAR,GAAoB,aAAK;AACrBN;AACH,iBAFD;;AAIAE,wBAAQK,OAAR,GAAkB,aAAK;AACnBC,4BAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,2BAAO,yCAAP;AACH,iBAHD;AAIH,aAdM,CAAP;AAeH;;;qCAEY;AAAA;;AACT,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAIY,SAAS,OAAKjB,WAAL,CACRO,WADQ,CACI,CAAC,OAAKN,MAAN,CADJ,EACmB,UADnB,EAERO,WAFQ,CAEI,OAAKP,MAFT,EAGRiB,UAHQ,EAAb;;AAKA,oBAAIC,cAAc,EAAlB;;AAEAF,uBAAOP,SAAP,GAAmB,aAAK;AACpB,wBAAIU,QAAQN,EAAEC,MAAF,CAASM,MAArB;AACA,wBAAGD,KAAH,EAAU;AACN,4BAAIE,IAAIF,MAAMG,KAAd;AACAJ,oCAAYK,IAAZ,CAAiB,IAAIC,UAAJ,CAAeH,EAAEI,KAAjB,EAAwBJ,EAAEK,WAA1B,EAAuCL,EAAEM,MAAzC,CAAjB;AACAR,8BAAMS,QAAN;AACH,qBAJD,MAKK;AACDzB,gCAAQe,WAAR;AACH;AACJ,iBAVD;;AAYAF,uBAAON,OAAP,GAAiB,aAAK;AAClBN,2BAAOS,EAAEC,MAAF,CAASC,KAAhB;AACH,iBAFD;AAGH,aAvBM,CAAP;AAwBH;;;qCAEY;AAAA;;AACT,mBAAO,IAAIb,OAAJ,CAAa,UAACC,OAAD,EAASC,MAAT,EAAoB;AACpC,oBAAIC,UAAU,OAAKN,WAAL,CACTO,WADS,CACG,CAAC,OAAKN,MAAN,CADH,EACkB,WADlB,EAETO,WAFS,CAEG,OAAKP,MAFR,EAGT6B,KAHS,EAAd;;AAKIxB,wBAAQI,SAAR,GAAoB,aAAK;AACrBN;AACH,iBAFD;;AAIAE,wBAAQK,OAAR,GAAkB,aAAK;AACnBC,4BAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,2BAAO,wCAAP;AACH,iBAHD;AAIP,aAdM,CAAP;AAeH","file":"NegociacaoDao.js","sourcesContent":["class NegociacaoDao {\n    constructor(connection) {\n        this._connection = connection;\n        this._store = 'negociacoes';\n    }\n\n    adiciona(negociacao) {\n        return new Promise((resolve, reject) => {\n            let request = this._connection\n                .transaction([this._store], \"readwrite\")\n                .objectStore(this._store)\n                .add(negociacao);\n            \n            request.onsuccess = e => {\n                resolve();\n            }\n\n            request.onerror = e => {\n                console.log(e.target.error);\n                reject(\"Não foi possível adicionar a negociação\");\n            }\n        });\n    }\n\n    listaTodos() {\n        return new Promise((resolve, reject) => {\n            let cursor = this._connection\n                .transaction([this._store], \"readonly\")\n                .objectStore(this._store)\n                .openCursor();\n\n            let negociacoes = [];\n\n            cursor.onsuccess = e => {\n                let atual = e.target.result;\n                if(atual) {\n                    let n = atual.value;\n                    negociacoes.push(new Negociacao(n._data, n._quantidade, n._valor)); \n                    atual.continue();\n                }\n                else {\n                    resolve(negociacoes);\n                }\n            }\n\n            cursor.onerror = e => {\n                reject(e.target.error);\n            }\n        });\n    }\n\n    apagaTodos() {\n        return new Promise( (resolve,reject) => {\n            let request = this._connection\n                .transaction([this._store], \"readwrite\")\n                .objectStore(this._store)\n                .clear();\n\n                request.onsuccess = e => {\n                    resolve();\n                }\n\n                request.onerror = e => {\n                    console.log(e.target.error);\n                    reject(\"Não foi possível apagar as negociações\");\n                }\n        });\n    }\n}"]}