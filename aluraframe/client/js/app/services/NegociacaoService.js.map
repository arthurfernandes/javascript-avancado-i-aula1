{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_httpService","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","then","negociacoes","periodos","reduce","arrayAchatado","arr","concat","catch","Error","erro","get","map","Date","n","data","quantidade","valor","console","log","negociacao","getConnection","connection","dao","adiciona","listaTodos","negociacoesExistentes","obterNegociacoes","filter","some","isEquals","negociacaoExistente","apagaTodos"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from './HttpService';\nimport {ConnectionFactory} from './ConnectionFactory';\nimport {NegociacaoDao} from '../dao/NegociacaoDao';\nimport {Negociacao} from '../models/Negociacao';\n\nexport class NegociacaoService {\n\n\tconstructor() {\n\t\tthis._httpService = new HttpService();\n\t}\n\n\tobterNegociacoes() {\n\t\treturn Promise.all([\n\t\t\tthis.obterNegociacoesDaSemana(),\n\t\t\tthis.obterNegociacoesDaSemanaAnterior(),\n\t\t\tthis.obterNegociacoesDaSemanaRetrasada()]\n\t\t).then( periodos => {\n\t\t\tlet negociacoes = periodos.reduce((arrayAchatado, arr) => arrayAchatado.concat(arr), []);\n\t\t\treturn negociacoes;\n\t\t}).catch( erro => {\n\t\t\tthrow new Error(erro);\n\t\t});\n\t}\n\n\tobterNegociacoesDaSemana() {\n\t\treturn this._httpService.get('negociacoes/semana')\n\t\t\t\t.then( negociacoes => {\n\t\t\t\t\treturn negociacoes.map( n => new Negociacao(new Date(n.data), n.quantidade, n.valor));\n\t\t\t\t})\n\t\t\t\t.catch( erro => {\n\t\t\t\t\tconsole.log(erro);\n\t\t\t\t\tthrow new Error(\"Não foi possível obter as negociações da semana\");\n\t\t\t\t});\n\t}\n\n\tobterNegociacoesDaSemanaAnterior() {\n\t\treturn this._httpService.get('negociacoes/anterior')\n\t\t\t\t.then( negociacoes => {\n\t\t\t\t\treturn negociacoes.map( n => new Negociacao(new Date(n.data), n.quantidade, n.valor));\n\t\t\t\t})\n\t\t\t\t.catch( erro => {\n\t\t\t\t\tconsole.log(erro);\n\t\t\t\t\tthrow new Error(\"Não foi possível obter as negociações da semana anterior\");\n\t\t\t\t});\n\t}\n\n\tobterNegociacoesDaSemanaRetrasada() {\n\t\treturn this._httpService.get('negociacoes/retrasada')\n\t\t\t\t.then( negociacoes => {\n\t\t\t\t\treturn negociacoes.map( n => new Negociacao(new Date(n.data), n.quantidade, n.valor));\n\t\t\t\t})\n\t\t\t\t.catch( erro => {\n\t\t\t\t\tconsole.log(erro);\n\t\t\t\t\tthrow new Error(\"Não foi possível obter as negociações da semana retrasada\");\n\t\t\t\t});\n\t}\n\n\tcarrega(negociacao) {\n\t\treturn ConnectionFactory.getConnection()\n\t\t\t\t.then(connection => new NegociacaoDao(connection))\n\t\t\t\t.then(dao => {\n\t\t\t\t\tdao.adiciona(negociacao)\n\t\t\t\t\treturn \"Negociação incluida com sucesso\";\n\t\t\t\t})\n\t\t\t\t.catch( erro => {\n\t\t\t\t\tconsole.log(erro);\n\t\t\t\t\tthrow new Error(\"Não foi possível incluir a negociação\");\n\t\t\t\t});\n\t}\n\n\tlista() {\n\t\treturn ConnectionFactory.getConnection()\n\t\t\t\t.then( connection => new NegociacaoDao(connection))\n\t\t\t\t.then( dao => dao.listaTodos())\n\t\t\t\t.catch( erro => {\n\t\t\t\t\tconsole.log(erro);\n\t\t\t\t\tthrow new Error(\"Não foi possível resgatar as negociações do banco\");\n\t\t\t\t});\n\t}\n\n\timporta(negociacoesExistentes) {\n\t\treturn this.obterNegociacoes()\n\t\t\t\t.then( negociacoes => negociacoes.filter( negociacao => \n\t\t\t\t\t!negociacoesExistentes.some(negociacaoExistente =>  \n\t\t\t\t\tnegociacao.isEquals(negociacaoExistente))))\n\t\t\t\t.catch( erro => {\n\t\t\t\t\tconsole.log(erro);\n\t\t\t\t\tthrow new Error(\"Não foi possível importar as negociações\");\n\t\t\t\t});\n\t}\n\n\tapaga() {\n\t\treturn ConnectionFactory.getConnection()\n\t\t\t\t.then(connection => new NegociacaoDao(connection))\n\t\t\t\t.then(dao => dao.apagaTodos())\n\t\t\t\t.then( () => \"Negociações apagadas com sucesso\")\n\t\t\t\t.catch( erro => {\n\t\t\t\t\tconsole.log(erro);\n\t\t\t\t\tthrow new Error(\"Não foi possível apagar as Negociações\");\n\t\t\t\t})\n\t}\n}"]}